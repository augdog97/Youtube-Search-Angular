# For the testing stage you must include all those lines so the tests run and finish. If  ng test doesnt have the flags that come after it, it will hang on that stage.

image: node:latest

before_script:
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - gem install dpl

stages:
    - production




production:
    type: deploy
    stage: production
    image: ruby:latest
    script:
        - apt-get --yes install jq
        - TP=./src/environments
        - TF="$TP/environment.ts"
        - mkdir -p "$TP"
        - jq -n --arg youtube "$youtube" '{"production":true,  "youtube":"$youtube"}' > "$TF"
        - cat ./src/environments/environment.ts
        - ls -ld ~./src/environments/
        - dpl --provider=heroku --app=$HEROKU_APP_PRODUCTION --api-key=$HEROKU_API_KEY 
    only:
        - master

        #- pwd  
        #- find .
        #- TP=./src/environments
        #- TF="$TP/environment"
        #- PE="$TP/environment.prod.ts"
       # - mkdir -p "$TP"
        #- printf "export const environment = { \n\t production:false,\n\t youtube:\'%s\' \n};\n" "$youtube" > "$TF"
        #- printf "export const environment = { \n\t production:true,\n\t youtube:\'%s\' \n};\n" "$youtube" > "$PE"
        #- cat "$TF"
       # - cat "$PE"
       # - cp "$TF" "$TF".ts
       # - echo "youtube=$youtube" > .env
       # - echo "youtube=$youtube" > .env
       # - set +e
       # - pwd
       # - (which ifconfig) || apt install net-tools
       # - ifconfig
        #- (which dig) || apt --yes install dnsutils
       # - dig +short myip.opendns.com @resolver1.opendns.com
      #  - TF="$TP/environment.ts"
      #  - PE="$TP/environment.prod.ts"
      #  - echo "$PE"
      #  - mkdir -p "$TP"
      #  - realpath "$PE"
      #  - echo "$TF"
      #  - printf "export const environment = { \n\t production:false,\n\t youtube:\'%s\' \n};\n" "$youtube" > "$TF"
      #  - printf "export const environment = { \n\t production:true,\n\t youtube:\'%s\' \n};\n" "$youtube" > "$PE"
      # - ls -ld /tmp/*