# For the testing stage you must include all those lines so the tests run and finish. If  ng test doesnt have the flags that come after it, it will hang on that stage.

image: node:latest

before_script:
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - gem install dpl

stages:
    - production




production:
    type: deploy
    stage: production
    image: ruby:latest
    script:
        - TP=./src/environments
        - TF="$TP/environment"
        - PE="$TF.prod.ts"
        - echo "$PE"
        - echo "$TF"
        - mkdir -p "$TP"
        - printf "export const environment = { \n\t production:false,\n\t youtube:\'%s\' \n};\n" "$youtube" > "$TF"
        - printf "export const environment = { \n\t production:true,\n\t youtube:\'%s\' \n};\n" "$youtube" > "$PE"
        - cat "$TF"
        - cat "$PE"
        - cp "$TF" "$TF".ts
        - echo "youtube=$youtube" > .env
        - dpl --provider=heroku --app=$HEROKU_APP_PRODUCTION --api-key=$HEROKU_API_KEY
    only:
        - master

        #- pwd  
        #- find .
        #- TP=./src/environments
        #- TF="$TP/environment"
        #- PE="$TP/environment.prod.ts"
       # - mkdir -p "$TP"
        #- printf "export const environment = { \n\t production:false,\n\t youtube:\'%s\' \n};\n" "$youtube" > "$TF"
        #- printf "export const environment = { \n\t production:true,\n\t youtube:\'%s\' \n};\n" "$youtube" > "$PE"
        #- cat "$TF"
       # - cat "$PE"
       # - cp "$TF" "$TF".ts
       # - echo "youtube=$youtube" > .env